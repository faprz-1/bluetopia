{
  "name": "Usuario",
  "base": "User",
  "idInjection": true,
  "options": {
    "validateUpsert": true
  },
  "hidden": [
    "profileImageId",
    "FBToken",
    "GToken"
  ],
  "scope": {
    "include": "profileImage"
  },
  "properties": {
    "FBToken": {
      "type": "string"
    },
    "GToken": {
      "type": "string"
    },
    "active": {
      "type": "boolean",
      "default": true
    },
    "customerId": {
      "type": "string"
    }
  },
  "validations": [],
  "relations": {
    "accessTokens": {
      "type": "hasMany",
      "model": "UsuarioAccessToken",
      "foreignKey": "userId"
    },
    "profileImage": {
      "type": "belongsTo",
      "model": "UploadedFiles",
      "foreignKey": "profileImageId"
    },
    "pushTokens": {
      "type": "hasMany",
      "model": "PushTokens",
      "foreignKey": "",
      "options": {
        "nestRemoting": true
      }
    },
    "userPermissions": {
      "type": "hasMany",
      "model": "UserPermissionPolicyNode",
      "foreignKey": "",
      "through": "UserPermissionPolicyRelation"
    },
    "cardtokenusers": {
      "type": "hasMany",
      "model": "cardtokenuser",
      "foreignKey": "userId",
      "options": {
        "nestRemoting": true
      }
    }
  },
  "acls": [
    {
      "accessType": "EXECUTE",
      "principalType": "ROLE",
      "principalId": "$everyone",
      "permission": "DENY"
    },
    {
      "accessType": "*",
      "principalType": "ROLE",
      "principalId": "$owner",
      "permission": "ALLOW"
    },
    {
      "accessType": "EXECUTE",
      "principalType": "ROLE",
      "principalId": "$everyone",
      "permission": "ALLOW",
      "property": [
        "register",
        "getRoles",
        "registerAdminis",
        "registerAdmin",
        "loginBySocialMedia",
        "loginIfActive",
        "addCard",
        "asignedMeConekta"
      ]
    },
    {
      "accessType": "EXECUTE",
      "principalType": "ROLE",
      "principalId": "$authenticated",
      "permission": "ALLOW",
      "property": "userWithCredentials"
    },
    {
      "accessType": "EXECUTE",
      "principalType": "ROLE",
      "principalId": "$authenticated",
      "permission": "ALLOW",
      "property": "testPush"
    },
    {
      "accessType": "EXECUTE",
      "principalType": "ROLE",
      "principalId": "SuperUser",
      "permission": "ALLOW",
      "property": [
        "getAnyUsers",
        "updateAnyUser",
        "changeAnyPassword",
        "addCard",
        "asignedMeConekta"
      ]
    }
  ],
  "methods": {
    "prototype.changeProfileImage": {
      "accepts": [
        {
          "arg": "newImage",
          "type": "object",
          "required": true,
          "description": "new image in base 64",
          "http": {
            "source": "body"
          }
        }
      ],
      "returns": [
        {
          "arg": "updatedUser",
          "type": "object",
          "root": true,
          "description": "updated user from db"
        }
      ],
      "description": "changes the user's prifile image for a new one",
      "http": [
        {
          "path": "/changeProfileImage",
          "verb": "post"
        }
      ]
    },
    "prototype.updatePushTokenMobile": {
      "accepts": [
        {
          "arg": "body",
          "type": "object",
          "required": true,
          "description": "token to be saved",
          "http": {
            "source": "body"
          }
        }
      ],
      "returns": [],
      "description": "updates a user's push token",
      "http": [
        {
          "path": "/updatePushTokenMobile",
          "verb": "post"
        }
      ]
    },
    "prototype.updatePushToken": {
      "accepts": [
        {
          "arg": "body",
          "type": "object",
          "required": true,
          "description": "token to be saved",
          "http": {
            "source": "body"
          }
        }
      ],
      "returns": [],
      "description": "updates a user's push token",
      "http": [
        {
          "path": "/updatePushToken",
          "verb": "post"
        }
      ]
    },
    "prototype.deletePushToken": {
      "accepts": [
        {
          "arg": "body",
          "type": "object",
          "required": true,
          "description": "token to be saved",
          "http": {
            "source": "body"
          }
        }
      ],
      "returns": [],
      "description": "updates a user's push token",
      "http": [
        {
          "path": "/deletePushToken",
          "verb": "post"
        }
      ]
    },
    "userWithCredentials": {
      "accepts": [
        {
          "arg": "ctx",
          "type": "object",
          "required": true,
          "description": "Current Context",
          "http": {
            "source": "req"
          }
        }
      ],
      "returns": [
        {
          "arg": "userWithCredentials",
          "type": "object",
          "root": true,
          "description": "user with it's credentials"
        }
      ],
      "description": "Gets an user with his credentials",
      "http": [
        {
          "path": "/withCredentials",
          "verb": "get"
        }
      ]
    },
    "register": {
      "accepts": [
        {
          "arg": "newUser",
          "type": "object",
          "required": true,
          "description": "new User object to be stored",
          "http": {
            "source": "body"
          }
        }
      ],
      "returns": [
        {
          "arg": "user",
          "type": "object",
          "root": true,
          "description": "user in DB"
        }
      ],
      "description": "registers a new user with a profile picture",
      "http": [
        {
          "path": "/register",
          "verb": "post"
        }
      ]
    },
    "registerAdminis": {
      "accepts": [
        {
          "arg": "newUser",
          "type": "object",
          "required": true,
          "description": "new  adminUser object to be stored",
          "http": {
            "source": "body"
          }
        }
      ],
      "returns": [
        {
          "arg": "user",
          "type": "object",
          "root": true,
          "description": "user in DB"
        }
      ],
      "description": "registers a new admin with a profile picture",
      "http": [
        {
          "path": "/registerAdminis",
          "verb": "post"
        }
      ]
    },
    "testPush": {
      "accepts": [],
      "returns": [
        {
          "arg": "testPush",
          "type": "object",
          "root": true,
          "description": "testPush"
        }
      ],
      "description": "testPush",
      "http": [
        {
          "path": "/testPush",
          "verb": "get"
        }
      ]
    },
    "getRoles": {
      "accepts": [],
      "returns": [
        {
          "arg": "roles",
          "type": "object",
          "root": true,
          "description": "roles in DB"
        }
      ],
      "description": "gives all the roles in db",
      "http": [
        {
          "path": "/getRoles",
          "verb": "get"
        }
      ]
    },
    "loginBySocialMedia": {
      "accepts": [
        {
          "arg": "user",
          "type": "object",
          "required": true,
          "description": "user to login",
          "http": {
            "source": "body"
          }
        }
      ],
      "returns": [
        {
          "arg": "user",
          "type": "object",
          "root": true,
          "description": "logged user "
        }
      ],
      "description": "log the user by social media token",
      "http": [
        {
          "path": "/loginBySocialMedia",
          "verb": "post"
        }
      ]
    },
    "getAnyUsers": {
      "accepts": [
        {
          "arg": "ctx",
          "type": "object",
          "required": true,
          "description": "Current Context",
          "http": {
            "source": "req"
          }
        }
      ],
      "returns": [
        {
          "arg": "users",
          "type": "array",
          "root": true,
          "description": ""
        }
      ],
      "description": "Gets Users",
      "http": [
        {
          "path": "/users",
          "verb": "get"
        }
      ]
    },
    "changeAnyPassword": {
      "accepts": [
        {
          "arg": "ctx",
          "type": "object",
          "required": true,
          "description": "Current Context",
          "http": {
            "source": "req"
          }
        },
        {
          "arg": "data",
          "type": "object",
          "required": true,
          "description": "{userId, newPassword}",
          "http": {
            "source": "body"
          }
        }
      ],
      "returns": [
        {
          "arg": "msg",
          "type": "string",
          "root": true,
          "description": "Message of success"
        }
      ],
      "description": "Update ana user's password",
      "http": [
        {
          "path": "/updatePass",
          "verb": "post"
        }
      ]
    },
    "prototype.updateAnyUser": {
      "accepts": [
        {
          "arg": "ctx",
          "type": "object",
          "required": true,
          "description": "Current Context",
          "http": {
            "source": "req"
          }
        },
        {
          "arg": "updtUser",
          "type": "object",
          "required": true,
          "description": "any User object to be updated",
          "http": {
            "source": "body"
          }
        }
      ],
      "returns": [
        {
          "arg": "users",
          "type": "array",
          "root": true,
          "description": "users"
        }
      ],
      "description": "Update any user",
      "http": [
        {
          "path": "/updateUs",
          "verb": "post"
        }
      ]
    },
    "loginIfActive": {
      "accepts": [
        {
          "arg": "credentials",
          "type": "object",
          "required": true,
          "description": "{email, password}",
          "http": {
            "source": "body"
          }
        }
      ],
      "returns": [
        {
          "arg": "token",
          "type": "object",
          "root": true,
          "description": "Token"
        }
      ],
      "description": "Login to platform",
      "http": [
        {
          "path": "/login",
          "verb": "post"
        }
      ]
    },
    "addCard": {
      "accepts": [
        {
          "arg": "objCard",
          "type": "object",
          "required": true,
          "description": "",
          "http": {
            "source": "body"
          }
        }
      ],
      "returns": [
        {
          "arg": "newObjCard",
          "type": "object",
          "root": true,
          "description": ""
        }
      ],
      "description": "",
      "http": [
        {
          "path": "/addCard",
          "verb": "post"
        }
      ]
    },
    "prototype.asignedMeConekta": {
      "accepts": [
        {
          "arg": "myInfo",
          "type": "object",
          "required": true,
          "description": "",
          "http": {
            "source": "body"
          }
        }
      ],
      "returns": [
        {
          "arg": "newConektaInfo",
          "type": "object",
          "root": true,
          "description": ""
        }
      ],
      "description": "",
      "http": [
        {
          "path": "/asignedMeConekta",
          "verb": "post"
        }
      ]
    }
  }
}
