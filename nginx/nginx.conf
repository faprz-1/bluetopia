# Number of workers to run, usually equals number of CPU cores.
worker_processes auto;

# Maximum number of opened files per process.
worker_rlimit_nofile 4096;

events {
  # Maximum number of simultaneous connections that can be opened by a worker process.
  worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    # ---------------------------------------------------------------------------
    # Security settings
    # Disable nginx version from being displayed on errors.
    server_tokens off;
    # This header enables the Cross-site scripting (XSS) filter built into most recent web browsers.
    # It's usually enabled by default anyway, so the role of this header is to re-enable the filter for
    # this particular website if it was disabled by the user.
    # https://www.owasp.org/index.php/List_of_useful_HTTP_headers
    add_header X-XSS-Protection "1; mode=block";
    # ---------------------------------------------------------------------------

    # Avoid situations where a hostname is too long when dealing with vhosts.
    server_names_hash_bucket_size 64;
    server_names_hash_max_size 512;

    # Performance optimizations.
    sendfile on;
    tcp_nopush on;

    #Disable maximun client request body size.
    client_max_body_size 0;

    # http://nginx.org/en/docs/hash.html
    types_hash_max_size 2048;

    # Enable gzip for everything but IE6.
    gzip on;
    gzip_disable "msie6";
    
    #Act as Load Balancer for 4 nodes
    upstream loopback.local {
        server loopback-dotnetcore:80;
        #server loopback-dotnetcore_2:80;
        #server loopback-dotnetcore_3:80;
        #server loopback-dotnetcore_4:80;
    }

    # Redirect all HTTP traffic to HTTPS
    server {
      listen 80;
      return 301 https://$host$request_uri;
    }
    
    # HTTPS Server
    server {
        listen 443;
        # Server name. You need a DNS record (or add this hostname to your hosts file)
        server_name loopback.local;

        # Digital certificates generated with makecert.sh / makecert.bat
        #.cert
        ssl_certificate /etc/letsencrypt/live/project.com/fullchain.pem;
        #.key
        ssl_certificate_key /etc/letsencrypt/live/project.com/privkey.pem;

        # SSL configuration
        ssl on;
        ssl_session_cache  builtin:1000  shared:SSL:10m;
        ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
        ssl_prefer_server_ciphers on;

        # Location configuration to use the loopback.local upstream defined before
        location /api {
            proxy_pass          http://loopback.local;
            proxy_read_timeout  120;
            proxy_set_header        Host $host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;       

            proxy_redirect      http://localhost https://loopback.local:3000/api;
        }

        #Location for web
        location / {
            root /var/www/landing;
            index index.html;
            try_files $uri $uri/ =404;
        }
    }
}